{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.0",
    "title": "REST API Kapusta",
    "description": "Showing off swagger-ui-express"
  },
  "consumes": ["application/json", "text/plain", "multipart/form-data"],
  "produces": ["application/json", "text/plain", "application/xml"],
  "servers": [{ "url": "https://kapusta-team-project-back.herokuapp.com" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Transactions",
      "description": "Transactions endpoints"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Email sent successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponseError"
                }
              }
            }
          },
          "409": {
            "description": "Provided email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponseErr"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponseErrServer"
                }
              }
            }
          }
        }
      }
    }, "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "User has not verified his email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginErrorVerifiedResponse"
                }
              }
            }
          }
        }
      }
    }, "/api/transaction/income": {
      "patch": {
        "tags": ["Transactions"],
        "summary": "Add new transaction",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Object with income`s transaction",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionRequestIncome"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceErrorResponse"
                }
              }
            }
          }
        }
      }
    }, 
     "/api/transaction/expenses": {
      "patch": {
        "tags": ["Transactions"],
        "summary": "Add new transaction",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Object with income`s transaction",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceErrorResponse"
                }
              }
            }
          }
        }
      }
    },  "/api/transaction/{type}/{period}": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get transactions by period",
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "required": true,
            "type": "string",
            "description": "type of transactions",
            "example": "income"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string",
            "description": "Period of transactions",
            "example": "01.2021"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionByPeriodResponse"
                }
              }
            }
          },
           "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceErrorResponse"
                }
              }
            }
          }
        }
      }
    
  },   "/api/transaction/categories/{type}/{date}": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get transactions sum by one month",
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "required": true,
            "type": "string",
            "description": "type of transactions",
            "example": "income"
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "description": "Yaer of transactions",
            "example": "01.12.2021"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionByCategories"
                }
              }
            }
          }, "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceErrorResponse"
                }
              }
            }
          }
        }
      }
    
  },
   "/api/transaction/summary/{type}/{date}": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get transactions by one year without current month",
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "required": true,
            "type": "string",
            "description": "type of transactions",
            "example": "income"
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "description": "Yaer of transactions",
            "example": "01.12.2021"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionByYearResponse"
                }
              }
            }
          }, "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceErrorResponse"
                }
              }
            }
          }
        }
      }
    
  }, "/api/transaction/{id}": {
      "delete": {
        "tags": ["Transactions"],
        "summary": "Delete one transaction",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "The id of transaction",
            "example": "615ca9a2e6502c38886cf887"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTransactionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTransactionErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verify/{verifyToken}": {
      "get": {
        "tags": ["Auth"],
        "summary": "User email verify",
        "parameters": [
          {
            "in": "path",
            "name": "verifyToken",
            "required": true,
            "type": "string",
            "description": "Users's verify token"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserVerifyResponse"
                }
              }
            }
          },
          "404": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseUserVerify"
                }
              }
            }
          }
        }
    }
},
 "/api/auth/verify": {
      "post": {
        "tags": ["Auth"],
        "summary": "Verification email sent",
        "parameters": [],
        "requestBody": {
          "description": "User email object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepeatVerifyRequest"
              }
            }
          }
        },
        "responses": {
          "message": {
            "description": "Verification email sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRepeatVerifyResponse"
                }
              }
            }
          },
          "409": {
            "description": "Verification has already been passed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseUserRepeatVerify"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          }
        }
      }
    },
 "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "User current. Check the token in the request header!",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "500": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentErrorResponse"
                }
              }
            }
          }
        }
      }
    },
       "/api/auth/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "204": {
            "description": "success",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse500"
                }
              }
            }
          }
        }
      }
    }
  },   
 

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Alex"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "CreateTransactionRequestIncome": {
        "type": "object",
        "required": ["transactionType", "date", "category",  "sum"],
        "properties": {
          "transactionType": {
            "type": "string",
            "description": "Type of transaction",
            "example": "income"
          },
          "date": {
            "type": "string",
            "description": "Date of transaction",
            "example": "10.10.2021"
          },
          "category": {
            "type": "string",
            "description": "Category of income",
            "example": "ЗП"
          },
         
          "sum": {
            "type": "number",
            "description": "Sum of transaction"
          }
        }
      },
      "CreateTransactionRequest": {
        "type": "object",
        "required": ["transactionType", "date", "category",  "sum"],
        "properties": {
          "transactionType": {
            "type": "string",
            "description": "Type of transaction",
            "example": "expense"
          },
          "date": {
            "type": "string",
            "description": "Date of transaction",
            "example": "10.10.2021"
          },
          "category": {
            "type": "string",
            "description": "Category of income",
            "example": "Продукты"
          },
         
          "sum": {
            "type": "number",
            "description": "Sum of transaction"
          }
        }
      },
      "CreateTransactionError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error",
            "example": "error"
          },
          "code": {
            "type": "string",
            "description": "400",
            "example": "400"
          },
          "message": {
            "type": "string",
            "description": "Missing required field",
            "example": "Missing required field"
          }
        }
      },"RepeatVerifyRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      }, "DeleteTransactionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success",
            "example": "success"
          },
          "code": {
            "type": "string",
            "description": "200",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "Transaction deleted",
            "example": "Transaction deleted"
          }
        }
      }, "DeleteTransactionErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error",
            "example": "error"
          },
          "code": {
            "type": "string",
            "description": "404",
            "example": "404"
          },
          "message": {
            "type": "string",
            "description": "Id of transaction not found",
            "example": "Id of transaction not found"
          }
        }
      },
       "NotFoundErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error",
            "example": "error"
          },
          "code": {
            "type": "string",
            "description": "404",
            "example": "404"
          },
          "message": {
            "type": "string",
            "description": "Not found",
            "example": "Not found"
          }
        }
      }, "ErrorResponseUserRepeatVerify": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error",
            "example": "error"
          },
          "code": {
            "type": "string",
            "description": "409",
            "example": "409"
          },
          "message": {
            "type": "string",
            "description": "Verification has already been passed",
            "example": "Verification has already been passed"
          }
        }
      },  "GetTransactionByYearResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success",
            "example": "success"
          },
          "code": {
            "type": "string",
            "description": "204",
            "example": "204"
          },
          "data": {
         
              "type":"object",
              "properties": {
                "month": {
                  "type":"string",
                "description": "Month"
                },
      

              "sum": {
                "type": "number",
                "description": "Sum of transaction"
              }
            
            }
          }
        }
      },
        "GetTransactionByCategories": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success",
            "example": "success"
          },
          "code": {
            "type": "string",
            "description": "204",
            "example": "204"
          },
          "data": {
         
              "type":"object",
              "properties": {
                "month": {
                  "type":"string",
                "description": "Month"
                },
      

              "sum": {
                "type": "number",
                "description": "Sum of transaction"
              }
            
            }
          }
        }
      },
      "GetTransactionByPeriodResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success",
            "example": "success"
          },
          "code": {
            "type": "string",
            "description": "204",
            "example": "204"
          },
          "data": {
         
              "type":"object",
              "properties": {
              "_id": {
                "type": "string",
                "description": "Id of transaction"
              },
              "date": {
                "type": "string",
                "format": "date",
                "description": "Date of transaction",
                "example": "10.10.2021"
              },
              "description": {
                "type": "string",
                "description": "Description of transaction"
              },
              "category": {
                "type": "string",
                "description": "Category of transaction"
              },

              "sum": {
                "type": "number",
                "description": "Sum of transaction"
              },
               "transactionType":{
               "type": "string",
                "description": "Category of transaction"
             },
              "owner": {
                "type": "string",
                "description": "User's id"
              },
              "createdAt": {
                "type": "string",
                "format": "date",
                "description": "Date creation of transaction"
              },
              "updatedAt": {
                "type": "string",
                "format": "date",
                "description": "Date updation of transaction"
              }
            
            }
          }
        }
      },
   
      "UserRepeatVerifyResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success"
          },
          "code": {
            "type": "string",
            "description": "200"
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Verification email sent",
                "example": "Verification email sent"
              }
            }
          }
        }
      },

      "CreateTransactionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Created"
          },
          "code": {
            "type": "string",
            "description": "201"
          },
          "data": {
            "type": "object",
          "properties": {
          "result": {
            "type": "object",
            "description": "Full transaction",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Id of transaction"
              },
             
              "date": {
                "type": "string",
                "format": "date",
                "description": "Date of transaction",
                "example": "10.10.2021"
              },
              "category": {
                "type": "string",
                "description": "Category of transaction"
              },
               "description": {
                "type": "string",
                "description": "Description of transaction"
              },
             
              "sum": {
                "type": "number",
                "description": "Sum of transaction"
              },
              
              "owner": {
                "type": "string",
                "description": "User's id"
              },
              "transactionType": {
                "type": "string",
                "description": "Category of transaction"

              },
              "createdAt": {
                "type": "string",
                "format": "date",
                "description": "Date creation of transaction"
              },
              "updatedAt": {
                "type": "string",
                "format": "date",
                "description": "Date updation of transaction"
              }
            }
            }
          }
        }
        }
      },
      
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success"
          },
          "code": {
            "type": "string",
            "description": "201"
          },
          "message": {
            "type": "string",
            "description": "Email sent successful"
          }
        }
      },
      "RegistrationResponseErr": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error"
          },
          "code": {
            "type": "string",
            "description": "409"
          },
          "message": {
            "type": "string",
            "description": "Already registered"
          }
        }
      },
        "RegistrationResponseError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error"
          },
          "code": {
            "type": "string",
            "description": "400"
          },
          "message": {
            "type": "string",
            "description": "Bad request (invalid request body)"
          }
        }
      },
      "RegistrationResponseErrServer": {
           "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error"
          },
          "code": {
            "type": "string",
            "description": "500"
          },
          "message": {
            "type": "string",
            "description": "Internal Server Error"
          }
        }
      },
      "LoginRequest": {
           "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
             "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success"
          },
          "code": {
            "type": "string",
            "description": "200"
          },
           "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "User's token"
              },
              "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  },
                  "balance": {
                      "type": "number",
                      "description": "User's balance"
                  },
                  "id": {
                      "type": "string",
                     "description": "User's id"
                  }
            }
          }
        }
      },
      "LoginErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error"
          },
          "code": {
            "type": "string",
            "description": "401"
          },
          "message": {
            "type": "string",
            "description": "Email or password is wrong"
          }
        }
      }, 
       "LoginErrorVerifiedResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error"
          },
          "code": {
            "type": "string",
            "description": "409"
          },
          "message": {
            "type": "string",
            "description": "User has not verified his email"
          }
        }
      },
      "UserVerifyResponse": {
           "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success"
          },
          "code": {
            "type": "string",
            "description": "200"
          },
          "message": {
            "type": "string",
            "description": "Verification success"
          }
        }
      },
      "ErrorResponseUserVerify": {
           "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error"
          },
          "code": {
            "type": "string",
            "description": "404"
          },
          "message": {
            "type": "string",
            "description": "Need verify again"
          }
        }
      },  "BalanceErrorResponse": {
           "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error"
          },
          "code": {
            "type": "string",
            "description": "404"
          },
          "message": {
            "type": "string",
            "description": "Not found user"
          }
        }
      },
      "CurrentResponse": {
          "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success"
          },
          "code": {
            "type": "string",
            "description": "200"
          },
           "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "balance": {
                  "type": "number",
                  "description": "User's balance"
              }
        }
      },
      "CurrentErrorResponse": {
           "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error"
          },
          "code": {
            "type": "string",
            "description": "500"
          },
          "message": {
            "type": "string",
            "description": "Internal Server Error"
          }
        }
      }, 
      "ErrorResponse500": {
           "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error"
          },
          "code": {
            "type": "string",
            "description": "500"
          },
          "message": {
            "type": "string",
            "description": "Internal Server Error"
          }
        }
      }

    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
